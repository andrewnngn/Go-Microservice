// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"golang-boilerplate/ent"
	"time"
)

type CommonReturn interface {
	IsCommonReturn()
	GetIsError() bool
	GetMsgFromDev() string
	GetMsgFromServer() string
}

type ContractC struct {
	ID              int       `json:"id"`
	StartDate       time.Time `json:"startDate"`
	EndDate         time.Time `json:"endDate"`
	RemainingAmount int       `json:"remainingAmount"`
	TotalAmount     int       `json:"totalAmount"`
}

type ContractV struct {
	ID        int       `json:"id"`
	StartDate time.Time `json:"startDate"`
	EndDate   time.Time `json:"endDate"`
}

type ContractorC struct {
	ID               int                 `json:"id"`
	Name             string              `json:"name"`
	Address          string              `json:"address"`
	WithdrawRequests []*WithdrawRequestC `json:"withdrawRequests"`
	IsError          bool                `json:"isError"`
	MsgFromDev       string              `json:"msgFromDev"`
	MsgFromServer    string              `json:"msgFromServer"`
}

func (ContractorC) IsCommonReturn()               {}
func (this ContractorC) GetIsError() bool         { return this.IsError }
func (this ContractorC) GetMsgFromDev() string    { return this.MsgFromDev }
func (this ContractorC) GetMsgFromServer() string { return this.MsgFromServer }

type GroupReturn struct {
	Data          *ent.Group `json:"data"`
	IsError       bool       `json:"isError"`
	MsgFromDev    string     `json:"msgFromDev"`
	MsgFromServer string     `json:"msgFromServer"`
}

func (GroupReturn) IsCommonReturn()               {}
func (this GroupReturn) GetIsError() bool         { return this.IsError }
func (this GroupReturn) GetMsgFromDev() string    { return this.MsgFromDev }
func (this GroupReturn) GetMsgFromServer() string { return this.MsgFromServer }

type UserReturn struct {
	Data          *ent.User `json:"data"`
	IsError       bool      `json:"isError"`
	MsgFromDev    string    `json:"msgFromDev"`
	MsgFromServer string    `json:"msgFromServer"`
}

func (UserReturn) IsCommonReturn()               {}
func (this UserReturn) GetIsError() bool         { return this.IsError }
func (this UserReturn) GetMsgFromDev() string    { return this.MsgFromDev }
func (this UserReturn) GetMsgFromServer() string { return this.MsgFromServer }

type VendorC struct {
	ID      int    `json:"id"`
	Name    string `json:"name"`
	Address string `json:"address"`
}

type VendorReturn struct {
	ID                int                 `json:"id"`
	Name              string              `json:"name"`
	Address           string              `json:"address"`
	ContractsV        []*ContractV        `json:"contractsV"`
	WithdrawRequestsV []*WithdrawRequestV `json:"withdrawRequestsV"`
	IsError           bool                `json:"isError"`
	MsgFromDev        string              `json:"msgFromDev"`
	MsgFromServer     string              `json:"msgFromServer"`
}

func (VendorReturn) IsCommonReturn()               {}
func (this VendorReturn) GetIsError() bool         { return this.IsError }
func (this VendorReturn) GetMsgFromDev() string    { return this.MsgFromDev }
func (this VendorReturn) GetMsgFromServer() string { return this.MsgFromServer }

type WithdrawRequestC struct {
	ID        int        `json:"id"`
	ContractC *ContractC `json:"contractC"`
	VendorC   *VendorC   `json:"vendorC"`
}

type WithdrawRequestV struct {
	ID             int       `json:"id"`
	CollectionDate time.Time `json:"collectionDate"`
}
