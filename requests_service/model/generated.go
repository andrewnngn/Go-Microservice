// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"golang-boilerplate/ent"
	"time"
)

type CommonReturn interface {
	IsCommonReturn()
	GetIsError() bool
	GetMsgFromDev() string
	GetMsgFromServer() string
}

type Contract struct {
	ID              int       `json:"id"`
	Vendor          *Group    `json:"vendor"`
	ContractStatus  *string   `json:"contractStatus"`
	StartDate       time.Time `json:"startDate"`
	EndDate         time.Time `json:"endDate"`
	RemainingAmount int       `json:"remainingAmount"`
	TotalAmount     int       `json:"totalAmount"`
}

type Group struct {
	ID      int     `json:"id"`
	Name    *string `json:"name"`
	Address *string `json:"address"`
}

type RequestReturn struct {
	Data          *ent.Request `json:"data"`
	IsError       bool         `json:"isError"`
	MsgFromDev    string       `json:"msgFromDev"`
	MsgFromServer string       `json:"msgFromServer"`
}

func (RequestReturn) IsCommonReturn()               {}
func (this RequestReturn) GetIsError() bool         { return this.IsError }
func (this RequestReturn) GetMsgFromDev() string    { return this.MsgFromDev }
func (this RequestReturn) GetMsgFromServer() string { return this.MsgFromServer }

type WithdrawCollectReturn struct {
	Data          *WithdrawRequest `json:"data"`
	IsError       bool             `json:"isError"`
	MsgFromDev    string           `json:"msgFromDev"`
	MsgFromServer string           `json:"msgFromServer"`
}

func (WithdrawCollectReturn) IsCommonReturn()               {}
func (this WithdrawCollectReturn) GetIsError() bool         { return this.IsError }
func (this WithdrawCollectReturn) GetMsgFromDev() string    { return this.MsgFromDev }
func (this WithdrawCollectReturn) GetMsgFromServer() string { return this.MsgFromServer }

type WithdrawRequest struct {
	ID                    int        `json:"id"`
	Contract              *Contract  `json:"contract"`
	Vendor                *Group     `json:"vendor"`
	ProjectContractor     *Group     `json:"projectContractor"`
	WithdrawRequestStatus string     `json:"withdrawRequestStatus"`
	Amount                *int       `json:"amount"`
	CollectionDate        *time.Time `json:"collectionDate"`
}

type WithdrawRequestReturn struct {
	Data          []*WithdrawRequest `json:"data"`
	IsError       bool               `json:"isError"`
	MsgFromDev    string             `json:"msgFromDev"`
	MsgFromServer string             `json:"msgFromServer"`
}

func (WithdrawRequestReturn) IsCommonReturn()               {}
func (this WithdrawRequestReturn) GetIsError() bool         { return this.IsError }
func (this WithdrawRequestReturn) GetMsgFromDev() string    { return this.MsgFromDev }
func (this WithdrawRequestReturn) GetMsgFromServer() string { return this.MsgFromServer }
