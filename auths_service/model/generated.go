// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"golang-boilerplate/ent"
)

type CommonReturn interface {
	IsCommonReturn()
	GetIsError() bool
	GetMsgFromDev() string
	GetMsgFromServer() string
}

type AuthReturn struct {
	Data          *ent.Auth `json:"data"`
	IsError       bool      `json:"isError"`
	MsgFromDev    string    `json:"msgFromDev"`
	MsgFromServer string    `json:"msgFromServer"`
}

func (AuthReturn) IsCommonReturn()               {}
func (this AuthReturn) GetIsError() bool         { return this.IsError }
func (this AuthReturn) GetMsgFromDev() string    { return this.MsgFromDev }
func (this AuthReturn) GetMsgFromServer() string { return this.MsgFromServer }

type AuthUserDetailsReturn struct {
	AccessToken   string    `json:"accessToken"`
	RefreshToken  string    `json:"refreshToken"`
	User          *UserInfo `json:"user"`
	IsError       bool      `json:"isError"`
	MsgFromDev    string    `json:"msgFromDev"`
	MsgFromServer string    `json:"msgFromServer"`
}

func (AuthUserDetailsReturn) IsCommonReturn()               {}
func (this AuthUserDetailsReturn) GetIsError() bool         { return this.IsError }
func (this AuthUserDetailsReturn) GetMsgFromDev() string    { return this.MsgFromDev }
func (this AuthUserDetailsReturn) GetMsgFromServer() string { return this.MsgFromServer }

type GroupOfUser struct {
	ID           int    `json:"id"`
	Name         string `json:"name"`
	Address      string `json:"address"`
	EmailAddress string `json:"emailAddress"`
}

type LoginInput struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type UserInfo struct {
	FirstName    string       `json:"firstName"`
	LastName     string       `json:"lastName"`
	Username     string       `json:"username"`
	Group        string       `json:"group"`
	Role         *string      `json:"role"`
	GroupDetails *GroupOfUser `json:"groupDetails"`
}
