// Code generated by ent, DO NOT EDIT.

package ent

import (
	"golang-boilerplate/ent/auth"
	"golang-boilerplate/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	authFields := schema.Auth{}.Fields()
	_ = authFields
	// authDescUsername is the schema descriptor for username field.
	authDescUsername := authFields[0].Descriptor()
	// auth.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	auth.UsernameValidator = authDescUsername.Validators[0].(func(string) error)
	// authDescPassword is the schema descriptor for password field.
	authDescPassword := authFields[1].Descriptor()
	// auth.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	auth.PasswordValidator = authDescPassword.Validators[0].(func(string) error)
	// authDescCreatedAt is the schema descriptor for created_at field.
	authDescCreatedAt := authFields[5].Descriptor()
	// auth.DefaultCreatedAt holds the default value on creation for the created_at field.
	auth.DefaultCreatedAt = authDescCreatedAt.Default.(func() time.Time)
	// authDescUpdatedAt is the schema descriptor for updated_at field.
	authDescUpdatedAt := authFields[6].Descriptor()
	// auth.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	auth.DefaultUpdatedAt = authDescUpdatedAt.Default.(func() time.Time)
	// auth.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	auth.UpdateDefaultUpdatedAt = authDescUpdatedAt.UpdateDefault.(func() time.Time)
}
